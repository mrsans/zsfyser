# 访问Druid的监控web
# http://IP:{server.port}/druid/index.html
server:
  port: 10002
spring:
  application:
    name: userApplication
  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/test1?serverTimezone=UTC&characterEncoding=utf8&useUnicode=true&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
    # 下面为连接池的补充设置，应用到上面所有数据源中
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间 以下均为毫秒
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    # 展示sql
    logSlowSql: true
    # 验证连接有效与否的SQL，不同的数据配置不同
    validationQuery: select 1
    # 执行validationQuery检测连接是否有效
    testWhileIdle: true
    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。True 为取不到连接不可用
    testOnBorrow: true
    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,防止sql注入
    filters: stat,wall,log4j
    # durid登陆账号密码
    loginUsername: root
    loginPassword: root
  redis:
    host: localhost
    port: 6379
    password:

# Eureka注册
eureka:
  username: 123qwe
  password: 123qwe
  host: 127.0.0.1
  port: 8761
  client:
    service-url:
      defaultZone:
        http://${eureka.username}:${eureka.password}@${eureka.host}:${eureka.port}/eureka/
#  展示IP
  instance:
    prefer-ip-address: true





